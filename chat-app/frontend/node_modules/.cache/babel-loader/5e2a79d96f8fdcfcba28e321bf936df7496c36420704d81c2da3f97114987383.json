{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NewUser\\\\Desktop\\\\chat-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nimport EmojiPicker from 'emoji-picker-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [socket, setSocket] = useState(null);\n  const [username, setUsername] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [isConnected, setIsConnected] = useState(false);\n  const [typingUsers, setTypingUsers] = useState([]);\n  const [isJoined, setIsJoined] = useState(false);\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const [room, setRoom] = useState('general');\n  const messageEndRef = useRef(null);\n  const emojiButtonRef = useRef(null);\n  useEffect(() => {\n    // Initialize socket connection\n    const newSocket = io('http://localhost:5000');\n    setSocket(newSocket);\n\n    // Handle connection events\n    newSocket.on('connect', () => {\n      setIsConnected(true);\n      console.log('Connected to server');\n    });\n    newSocket.on('disconnect', () => {\n      setIsConnected(false);\n      console.log('Disconnected from server');\n    });\n\n    // Listen for messages\n    newSocket.on('receive_message', data => {\n      setMessages(prev => [...prev, data]);\n    });\n\n    // Listen for user join/leave events\n    newSocket.on('user_joined', data => {\n      setMessages(prev => [...prev, data]);\n    });\n    newSocket.on('user_left', data => {\n      setMessages(prev => [...prev, data]);\n    });\n\n    // Listen for message reactions\n    newSocket.on('reaction_added', data => {\n      setMessages(prev => prev.map(msg => {\n        if (msg.id === data.messageId) {\n          var _msg$reactions;\n          return {\n            ...msg,\n            reactions: {\n              ...msg.reactions,\n              [data.reaction]: (((_msg$reactions = msg.reactions) === null || _msg$reactions === void 0 ? void 0 : _msg$reactions[data.reaction]) || 0) + 1\n            }\n          };\n        }\n        return msg;\n      }));\n    });\n\n    // Listen for typing events\n    newSocket.on('user_typing', data => {\n      if (data.isTyping) {\n        setTypingUsers(prev => {\n          if (!prev.includes(data.username)) {\n            return [...prev, data.username];\n          }\n          return prev;\n        });\n      } else {\n        setTypingUsers(prev => prev.filter(user => user !== data.username));\n      }\n    });\n\n    // Load message history\n    if (isJoined) {\n      fetch(`http://localhost:5000/messages?room=${room}`).then(response => response.json()).then(data => {\n        setMessages(data);\n      }).catch(error => {\n        console.error('Error loading message history:', error);\n      });\n    }\n\n    // Close emoji picker when clicking outside\n    const handleClickOutside = event => {\n      if (emojiButtonRef.current && !emojiButtonRef.current.contains(event.target)) {\n        setShowEmojiPicker(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      newSocket.close();\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isJoined, room]);\n\n  // Scroll to bottom when new message arrives\n  useEffect(() => {\n    var _messageEndRef$curren;\n    (_messageEndRef$curren = messageEndRef.current) === null || _messageEndRef$curren === void 0 ? void 0 : _messageEndRef$curren.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const handleJoin = e => {\n    e.preventDefault();\n    if (username.trim() && socket) {\n      socket.emit('user_join', {\n        username: username.trim(),\n        room: room\n      });\n      setIsJoined(true);\n    }\n  };\n  const handleSendMessage = e => {\n    e.preventDefault();\n    if (message.trim() && socket) {\n      socket.emit('send_message', {\n        message: message.trim()\n      });\n      setMessage('');\n      setShowEmojiPicker(false);\n\n      // Notify server that user stopped typing\n      socket.emit('typing', {\n        isTyping: false\n      });\n    }\n  };\n  const handleTyping = e => {\n    setMessage(e.target.value);\n    if (socket) {\n      if (e.target.value.trim()) {\n        socket.emit('typing', {\n          isTyping: true\n        });\n      } else {\n        socket.emit('typing', {\n          isTyping: false\n        });\n      }\n    }\n  };\n  const handleEmojiClick = emojiData => {\n    setMessage(prevMessage => prevMessage + emojiData.emoji);\n    setShowEmojiPicker(false);\n  };\n  const handleReaction = (messageId, reaction) => {\n    if (socket) {\n      socket.emit('message_reaction', {\n        messageId,\n        reaction\n      });\n    }\n  };\n  const formatTime = timestamp => {\n    const date = new Date(timestamp);\n    return date.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  if (!isConnected) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connection-status\",\n        children: \"Connecting to server...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this);\n  }\n  if (!isJoined) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Join Chat Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleJoin,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter your username\",\n            value: username,\n            onChange: e => setUsername(e.target.value),\n            required: true,\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: room,\n            onChange: e => setRoom(e.target.value),\n            className: \"room-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"general\",\n              children: \"General\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"random\",\n              children: \"Random\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"tech\",\n              children: \"Tech\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Join Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Real-Time Chat - \", room]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: `status-indicator ${isConnected ? 'connected' : 'disconnected'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), isConnected ? 'Connected' : 'Disconnected']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages-container\",\n        children: [messages.map((msg, index) => {\n          const isMyMessage = msg.username === username;\n          const isSystemMessage = !msg.username || msg.message.includes('joined') || msg.message.includes('left');\n          let messageClass = 'other-message';\n          if (isMyMessage) messageClass = 'my-message';\n          if (isSystemMessage) messageClass = 'system-message';\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${messageClass}`,\n            children: [!isSystemMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"username\",\n                children: msg.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"timestamp\",\n                children: formatTime(msg.timestamp)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: msg.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this), !isSystemMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-reactions\",\n              children: [Object.entries(msg.reactions || {}).map(([reaction, count]) => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"reaction\",\n                onClick: () => handleReaction(msg.id, reaction),\n                children: [reaction, \" \", count]\n              }, reaction, true, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 23\n              }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"reaction-options\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleReaction(msg.id, '👍'),\n                  children: \"\\uD83D\\uDC4D\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleReaction(msg.id, '❤️'),\n                  children: \"\\u2764\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleReaction(msg.id, '😂'),\n                  children: \"\\uD83D\\uDE02\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleReaction(msg.id, '😮'),\n                  children: \"\\uD83D\\uDE2E\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messageEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"typing-indicator\",\n        children: typingUsers.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [typingUsers.join(', '), \" \", typingUsers.length === 1 ? 'is' : 'are', \" typing\", /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"message-form\",\n        onSubmit: handleSendMessage,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"emoji-picker-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"emoji-button\",\n            onClick: () => setShowEmojiPicker(!showEmojiPicker),\n            ref: emojiButtonRef,\n            children: \"\\uD83D\\uDE0A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), showEmojiPicker && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"emoji-picker\",\n            children: /*#__PURE__*/_jsxDEV(EmojiPicker, {\n              onEmojiClick: handleEmojiClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type your message...\",\n          value: message,\n          onChange: handleTyping,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"O5xIweRkO9KMAu7DqkLhVO4ETW8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","EmojiPicker","jsxDEV","_jsxDEV","App","_s","socket","setSocket","username","setUsername","message","setMessage","messages","setMessages","isConnected","setIsConnected","typingUsers","setTypingUsers","isJoined","setIsJoined","showEmojiPicker","setShowEmojiPicker","room","setRoom","messageEndRef","emojiButtonRef","newSocket","on","console","log","data","prev","map","msg","id","messageId","_msg$reactions","reactions","reaction","isTyping","includes","filter","user","fetch","then","response","json","catch","error","handleClickOutside","event","current","contains","target","document","addEventListener","close","removeEventListener","_messageEndRef$curren","scrollIntoView","behavior","handleJoin","e","preventDefault","trim","emit","handleSendMessage","handleTyping","value","handleEmojiClick","emojiData","prevMessage","emoji","handleReaction","formatTime","timestamp","date","Date","toLocaleTimeString","hour","minute","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","autoFocus","index","isMyMessage","isSystemMessage","messageClass","Object","entries","count","onClick","ref","length","join","onEmojiClick","_c","$RefreshReg$"],"sources":["C:/Users/NewUser/Desktop/chat-app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport io from 'socket.io-client';\r\nimport EmojiPicker from 'emoji-picker-react';\r\n\r\nfunction App() {\r\n  const [socket, setSocket] = useState(null);\r\n  const [username, setUsername] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [typingUsers, setTypingUsers] = useState([]);\r\n  const [isJoined, setIsJoined] = useState(false);\r\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\r\n  const [room, setRoom] = useState('general');\r\n  const messageEndRef = useRef(null);\r\n  const emojiButtonRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Initialize socket connection\r\n    const newSocket = io('http://localhost:5000');\r\n    setSocket(newSocket);\r\n\r\n    // Handle connection events\r\n    newSocket.on('connect', () => {\r\n      setIsConnected(true);\r\n      console.log('Connected to server');\r\n    });\r\n\r\n    newSocket.on('disconnect', () => {\r\n      setIsConnected(false);\r\n      console.log('Disconnected from server');\r\n    });\r\n\r\n    // Listen for messages\r\n    newSocket.on('receive_message', (data) => {\r\n      setMessages(prev => [...prev, data]);\r\n    });\r\n\r\n    // Listen for user join/leave events\r\n    newSocket.on('user_joined', (data) => {\r\n      setMessages(prev => [...prev, data]);\r\n    });\r\n\r\n    newSocket.on('user_left', (data) => {\r\n      setMessages(prev => [...prev, data]);\r\n    });\r\n\r\n    // Listen for message reactions\r\n    newSocket.on('reaction_added', (data) => {\r\n      setMessages(prev => prev.map(msg => {\r\n        if (msg.id === data.messageId) {\r\n          return {\r\n            ...msg,\r\n            reactions: {\r\n              ...msg.reactions,\r\n              [data.reaction]: (msg.reactions?.[data.reaction] || 0) + 1\r\n            }\r\n          };\r\n        }\r\n        return msg;\r\n      }));\r\n    });\r\n\r\n    // Listen for typing events\r\n    newSocket.on('user_typing', (data) => {\r\n      if (data.isTyping) {\r\n        setTypingUsers(prev => {\r\n          if (!prev.includes(data.username)) {\r\n            return [...prev, data.username];\r\n          }\r\n          return prev;\r\n        });\r\n      } else {\r\n        setTypingUsers(prev => prev.filter(user => user !== data.username));\r\n      }\r\n    });\r\n\r\n    // Load message history\r\n    if (isJoined) {\r\n      fetch(`http://localhost:5000/messages?room=${room}`)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          setMessages(data);\r\n        })\r\n        .catch(error => {\r\n          console.error('Error loading message history:', error);\r\n        });\r\n    }\r\n\r\n    // Close emoji picker when clicking outside\r\n    const handleClickOutside = (event) => {\r\n      if (emojiButtonRef.current && !emojiButtonRef.current.contains(event.target)) {\r\n        setShowEmojiPicker(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => {\r\n      newSocket.close();\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, [isJoined, room]);\r\n\r\n  // Scroll to bottom when new message arrives\r\n  useEffect(() => {\r\n    messageEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  const handleJoin = (e) => {\r\n    e.preventDefault();\r\n    if (username.trim() && socket) {\r\n      socket.emit('user_join', { \r\n        username: username.trim(),\r\n        room: room\r\n      });\r\n      setIsJoined(true);\r\n    }\r\n  };\r\n\r\n  const handleSendMessage = (e) => {\r\n    e.preventDefault();\r\n    if (message.trim() && socket) {\r\n      socket.emit('send_message', { message: message.trim() });\r\n      setMessage('');\r\n      setShowEmojiPicker(false);\r\n      \r\n      // Notify server that user stopped typing\r\n      socket.emit('typing', { isTyping: false });\r\n    }\r\n  };\r\n\r\n  const handleTyping = (e) => {\r\n    setMessage(e.target.value);\r\n    \r\n    if (socket) {\r\n      if (e.target.value.trim()) {\r\n        socket.emit('typing', { isTyping: true });\r\n      } else {\r\n        socket.emit('typing', { isTyping: false });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleEmojiClick = (emojiData) => {\r\n    setMessage(prevMessage => prevMessage + emojiData.emoji);\r\n    setShowEmojiPicker(false);\r\n  };\r\n\r\n  const handleReaction = (messageId, reaction) => {\r\n    if (socket) {\r\n      socket.emit('message_reaction', { messageId, reaction });\r\n    }\r\n  };\r\n\r\n  const formatTime = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n    return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n  };\r\n\r\n  if (!isConnected) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"connection-status\">Connecting to server...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!isJoined) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"login-form\">\r\n          <h1>Join Chat Room</h1>\r\n          <form onSubmit={handleJoin}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter your username\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              required\r\n              autoFocus\r\n            />\r\n            <select \r\n              value={room} \r\n              onChange={(e) => setRoom(e.target.value)}\r\n              className=\"room-select\"\r\n            >\r\n              <option value=\"general\">General</option>\r\n              <option value=\"random\">Random</option>\r\n              <option value=\"tech\">Tech</option>\r\n            </select>\r\n            <button type=\"submit\">Join Chat</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"chat-container\">\r\n        <div className=\"chat-header\">\r\n          <h2>Real-Time Chat - {room}</h2>\r\n          <div className=\"status\">\r\n            <span className={`status-indicator ${isConnected ? 'connected' : 'disconnected'}`}></span>\r\n            {isConnected ? 'Connected' : 'Disconnected'}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"messages-container\">\r\n          {messages.map((msg, index) => {\r\n            const isMyMessage = msg.username === username;\r\n            const isSystemMessage = !msg.username || msg.message.includes('joined') || msg.message.includes('left');\r\n            \r\n            let messageClass = 'other-message';\r\n            if (isMyMessage) messageClass = 'my-message';\r\n            if (isSystemMessage) messageClass = 'system-message';\r\n            \r\n            return (\r\n              <div key={index} className={`message ${messageClass}`}>\r\n                {!isSystemMessage && (\r\n                  <div className=\"message-header\">\r\n                    <span className=\"username\">{msg.username}</span>\r\n                    <span className=\"timestamp\">{formatTime(msg.timestamp)}</span>\r\n                  </div>\r\n                )}\r\n                <div className=\"message-content\">{msg.message}</div>\r\n                \r\n                {/* Message Reactions */}\r\n                {!isSystemMessage && (\r\n                  <div className=\"message-reactions\">\r\n                    {Object.entries(msg.reactions || {}).map(([reaction, count]) => (\r\n                      <span \r\n                        key={reaction} \r\n                        className=\"reaction\"\r\n                        onClick={() => handleReaction(msg.id, reaction)}\r\n                      >\r\n                        {reaction} {count}\r\n                      </span>\r\n                    ))}\r\n                    <div className=\"reaction-options\">\r\n                      <button onClick={() => handleReaction(msg.id, '👍')}>👍</button>\r\n                      <button onClick={() => handleReaction(msg.id, '❤️')}>❤️</button>\r\n                      <button onClick={() => handleReaction(msg.id, '😂')}>😂</button>\r\n                      <button onClick={() => handleReaction(msg.id, '😮')}>😮</button>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n          <div ref={messageEndRef} />\r\n        </div>\r\n\r\n        <div className=\"typing-indicator\">\r\n          {typingUsers.length > 0 && (\r\n            <p>\r\n              {typingUsers.join(', ')} {typingUsers.length === 1 ? 'is' : 'are'} typing\r\n              <span></span><span></span><span></span>\r\n            </p>\r\n          )}\r\n        </div>\r\n\r\n        <form className=\"message-form\" onSubmit={handleSendMessage}>\r\n          <div className=\"emoji-picker-container\">\r\n            <button \r\n              type=\"button\" \r\n              className=\"emoji-button\"\r\n              onClick={() => setShowEmojiPicker(!showEmojiPicker)}\r\n              ref={emojiButtonRef}\r\n            >\r\n              😊\r\n            </button>\r\n            {showEmojiPicker && (\r\n              <div className=\"emoji-picker\">\r\n                <EmojiPicker onEmojiClick={handleEmojiClick} />\r\n              </div>\r\n            )}\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Type your message...\"\r\n            value={message}\r\n            onChange={handleTyping}\r\n            required\r\n          />\r\n          <button type=\"submit\">Send</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NewUser\\\\Desktop\\\\chat-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [socket, setSocket] = useState(null);\n  const [username, setUsername] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [isConnected, setIsConnected] = useState(false);\n  const [typingUsers, setTypingUsers] = useState([]);\n  const [isJoined, setIsJoined] = useState(false);\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const messageEndRef = useRef(null);\n  const emojiPickerRef = useRef(null);\n\n  // Common emojis for quick selection\n  const commonEmojis = ['😀', '😂', '🥰', '😎', '👍', '❤️', '🎉', '🤔', '👏', '🙏'];\n  useEffect(() => {\n    // Initialize socket connection\n    const newSocket = io('http://localhost:5000');\n    setSocket(newSocket);\n\n    // Handle connection events\n    newSocket.on('connect', () => {\n      setIsConnected(true);\n      console.log('Connected to server');\n    });\n    newSocket.on('disconnect', () => {\n      setIsConnected(false);\n      console.log('Disconnected from server');\n    });\n\n    // Listen for messages\n    newSocket.on('receive_message', data => {\n      setMessages(prev => [...prev, data]);\n    });\n\n    // Listen for user join/leave events\n    newSocket.on('user_joined', data => {\n      setMessages(prev => [...prev, data]);\n    });\n    newSocket.on('user_left', data => {\n      setMessages(prev => [...prev, data]);\n    });\n\n    // Listen for typing events\n    newSocket.on('user_typing', data => {\n      if (data.isTyping) {\n        setTypingUsers(prev => {\n          if (!prev.includes(data.username)) {\n            return [...prev, data.username];\n          }\n          return prev;\n        });\n      } else {\n        setTypingUsers(prev => prev.filter(user => user !== data.username));\n      }\n    });\n\n    // Close emoji picker when clicking outside\n    const handleClickOutside = event => {\n      if (emojiPickerRef.current && !emojiPickerRef.current.contains(event.target)) {\n        setShowEmojiPicker(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n\n    // Clean up on unmount\n    return () => {\n      newSocket.close();\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  // Scroll to bottom when new message arrives\n  useEffect(() => {\n    var _messageEndRef$curren;\n    (_messageEndRef$curren = messageEndRef.current) === null || _messageEndRef$curren === void 0 ? void 0 : _messageEndRef$curren.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const handleJoin = e => {\n    e.preventDefault();\n    if (username.trim() && socket) {\n      socket.emit('user_join', {\n        username: username.trim()\n      });\n      setIsJoined(true);\n    }\n  };\n  const handleSendMessage = e => {\n    e.preventDefault();\n    if (message.trim() && socket) {\n      socket.emit('send_message', {\n        message: message.trim()\n      });\n      setMessage('');\n      setShowEmojiPicker(false);\n\n      // Notify server that user stopped typing\n      socket.emit('typing', {\n        isTyping: false\n      });\n    }\n  };\n  const handleTyping = e => {\n    setMessage(e.target.value);\n    if (socket) {\n      if (e.target.value.trim()) {\n        socket.emit('typing', {\n          isTyping: true\n        });\n      } else {\n        socket.emit('typing', {\n          isTyping: false\n        });\n      }\n    }\n  };\n  const addEmoji = emoji => {\n    setMessage(prev => prev + emoji);\n    setShowEmojiPicker(false);\n  };\n  const toggleEmojiPicker = () => {\n    setShowEmojiPicker(prev => !prev);\n  };\n  const formatTime = timestamp => {\n    const date = new Date(timestamp);\n    return date.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  if (!isConnected) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connection-status\",\n        children: \"Connecting to server...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this);\n  }\n  if (!isJoined) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Join Chat Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleJoin,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter your username\",\n            value: username,\n            onChange: e => setUsername(e.target.value),\n            required: true,\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Join Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Real-Time Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: `status-indicator ${isConnected ? 'connected' : 'disconnected'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), isConnected ? 'Connected' : 'Disconnected']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages-container\",\n        children: [messages.map((msg, index) => {\n          const isMyMessage = msg.username === username;\n          const isSystemMessage = !msg.username || msg.message.includes('joined') || msg.message.includes('left');\n          let messageClass = 'other-message';\n          if (isMyMessage) messageClass = 'my-message';\n          if (isSystemMessage) messageClass = 'system-message';\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${messageClass}`,\n            children: [!isSystemMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"username\",\n                children: msg.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"timestamp\",\n                children: formatTime(msg.timestamp)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: msg.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messageEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"typing-indicator\",\n        children: typingUsers.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [typingUsers.join(', '), \" \", typingUsers.length === 1 ? 'is' : 'are', \" typing\", /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"emoji-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"emoji-trigger\",\n          onClick: toggleEmojiPicker,\n          children: \"Emojis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '5px',\n            overflowX: 'auto',\n            flex: 1\n          },\n          children: recentEmojis.map((emoji, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"emoji-btn\",\n            onClick: () => handleEmojiSelect(emoji),\n            \"aria-label\": `Add ${emoji} emoji`,\n            children: emoji\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 7\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 1\n      }, this), showEmojiPicker && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"emoji-overlay\",\n          onClick: closeEmojiPicker\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"emoji-picker\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"emoji-picker-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Select an Emoji\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"emoji-picker-close\",\n              onClick: closeEmojiPicker,\n              \"aria-label\": \"Close emoji picker\",\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"emoji-grid\",\n            children: Object.entries(emojiCategories).map(([category, emojis]) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: emojis.map((emoji, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"emoji-option\",\n                onClick: () => handleEmojiSelect(emoji),\n                \"aria-label\": `${category} emoji: ${emoji}`,\n                children: emoji\n              }, `${category}-${index}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 15\n              }, this))\n            }, category, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 11\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"message-form\",\n        onSubmit: handleSendMessage,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type your message...\",\n          value: message,\n          onChange: handleTyping,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IY5qetmCZbwWRdkKNdzBwu/ms9U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","socket","setSocket","username","setUsername","message","setMessage","messages","setMessages","isConnected","setIsConnected","typingUsers","setTypingUsers","isJoined","setIsJoined","showEmojiPicker","setShowEmojiPicker","messageEndRef","emojiPickerRef","commonEmojis","newSocket","on","console","log","data","prev","isTyping","includes","filter","user","handleClickOutside","event","current","contains","target","document","addEventListener","close","removeEventListener","_messageEndRef$curren","scrollIntoView","behavior","handleJoin","e","preventDefault","trim","emit","handleSendMessage","handleTyping","value","addEmoji","emoji","toggleEmojiPicker","formatTime","timestamp","date","Date","toLocaleTimeString","hour","minute","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","autoFocus","map","msg","index","isMyMessage","isSystemMessage","messageClass","ref","length","join","onClick","style","display","gap","overflowX","flex","recentEmojis","handleEmojiSelect","closeEmojiPicker","Object","entries","emojiCategories","category","emojis","_c","$RefreshReg$"],"sources":["C:/Users/NewUser/Desktop/chat-app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport io from 'socket.io-client';\r\n\r\nfunction App() {\r\n  const [socket, setSocket] = useState(null);\r\n  const [username, setUsername] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [typingUsers, setTypingUsers] = useState([]);\r\n  const [isJoined, setIsJoined] = useState(false);\r\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\r\n  const messageEndRef = useRef(null);\r\n  const emojiPickerRef = useRef(null);\r\n\r\n  // Common emojis for quick selection\r\n  const commonEmojis = ['😀', '😂', '🥰', '😎', '👍', '❤️', '🎉', '🤔', '👏', '🙏'];\r\n\r\n  useEffect(() => {\r\n    // Initialize socket connection\r\n    const newSocket = io('http://localhost:5000');\r\n    setSocket(newSocket);\r\n\r\n    // Handle connection events\r\n    newSocket.on('connect', () => {\r\n      setIsConnected(true);\r\n      console.log('Connected to server');\r\n    });\r\n\r\n    newSocket.on('disconnect', () => {\r\n      setIsConnected(false);\r\n      console.log('Disconnected from server');\r\n    });\r\n\r\n    // Listen for messages\r\n    newSocket.on('receive_message', (data) => {\r\n      setMessages(prev => [...prev, data]);\r\n    });\r\n\r\n    // Listen for user join/leave events\r\n    newSocket.on('user_joined', (data) => {\r\n      setMessages(prev => [...prev, data]);\r\n    });\r\n\r\n    newSocket.on('user_left', (data) => {\r\n      setMessages(prev => [...prev, data]);\r\n    });\r\n\r\n    // Listen for typing events\r\n    newSocket.on('user_typing', (data) => {\r\n      if (data.isTyping) {\r\n        setTypingUsers(prev => {\r\n          if (!prev.includes(data.username)) {\r\n            return [...prev, data.username];\r\n          }\r\n          return prev;\r\n        });\r\n      } else {\r\n        setTypingUsers(prev => prev.filter(user => user !== data.username));\r\n      }\r\n    });\r\n\r\n    // Close emoji picker when clicking outside\r\n    const handleClickOutside = (event) => {\r\n      if (emojiPickerRef.current && !emojiPickerRef.current.contains(event.target)) {\r\n        setShowEmojiPicker(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    \r\n    // Clean up on unmount\r\n    return () => {\r\n      newSocket.close();\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  // Scroll to bottom when new message arrives\r\n  useEffect(() => {\r\n    messageEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  const handleJoin = (e) => {\r\n    e.preventDefault();\r\n    if (username.trim() && socket) {\r\n      socket.emit('user_join', { username: username.trim() });\r\n      setIsJoined(true);\r\n    }\r\n  };\r\n\r\n  const handleSendMessage = (e) => {\r\n    e.preventDefault();\r\n    if (message.trim() && socket) {\r\n      socket.emit('send_message', { message: message.trim() });\r\n      setMessage('');\r\n      setShowEmojiPicker(false);\r\n      \r\n      // Notify server that user stopped typing\r\n      socket.emit('typing', { isTyping: false });\r\n    }\r\n  };\r\n\r\n  const handleTyping = (e) => {\r\n    setMessage(e.target.value);\r\n    \r\n    if (socket) {\r\n      if (e.target.value.trim()) {\r\n        socket.emit('typing', { isTyping: true });\r\n      } else {\r\n        socket.emit('typing', { isTyping: false });\r\n      }\r\n    }\r\n  };\r\n\r\n  const addEmoji = (emoji) => {\r\n    setMessage(prev => prev + emoji);\r\n    setShowEmojiPicker(false);\r\n  };\r\n\r\n  const toggleEmojiPicker = () => {\r\n    setShowEmojiPicker(prev => !prev);\r\n  };\r\n\r\n  const formatTime = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n    return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n  };\r\n\r\n  if (!isConnected) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"connection-status\">Connecting to server...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!isJoined) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"login-form\">\r\n          <h1>Join Chat Room</h1>\r\n          <form onSubmit={handleJoin}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter your username\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              required\r\n              autoFocus\r\n            />\r\n            <button type=\"submit\">Join Chat</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"chat-container\">\r\n        <div className=\"chat-header\">\r\n          <h2>Real-Time Chat</h2>\r\n          <div className=\"status\">\r\n            <span className={`status-indicator ${isConnected ? 'connected' : 'disconnected'}`}></span>\r\n            {isConnected ? 'Connected' : 'Disconnected'}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"messages-container\">\r\n          {messages.map((msg, index) => {\r\n            const isMyMessage = msg.username === username;\r\n            const isSystemMessage = !msg.username || msg.message.includes('joined') || msg.message.includes('left');\r\n            \r\n            let messageClass = 'other-message';\r\n            if (isMyMessage) messageClass = 'my-message';\r\n            if (isSystemMessage) messageClass = 'system-message';\r\n            \r\n            return (\r\n              <div key={index} className={`message ${messageClass}`}>\r\n                {!isSystemMessage && (\r\n                  <div className=\"message-header\">\r\n                    <span className=\"username\">{msg.username}</span>\r\n                    <span className=\"timestamp\">{formatTime(msg.timestamp)}</span>\r\n                  </div>\r\n                )}\r\n                <div className=\"message-content\">{msg.message}</div>\r\n              </div>\r\n            );\r\n          })}\r\n          <div ref={messageEndRef} />\r\n        </div>\r\n\r\n        <div className=\"typing-indicator\">\r\n          {typingUsers.length > 0 && (\r\n            <p>\r\n              {typingUsers.join(', ')} {typingUsers.length === 1 ? 'is' : 'are'} typing\r\n              <span></span><span></span><span></span>\r\n            </p>\r\n          )}\r\n        </div>\r\n\r\n {/* Emoji Bar */}\r\n<div className=\"emoji-bar\">\r\n  <button \r\n    className=\"emoji-trigger\"\r\n    onClick={toggleEmojiPicker}\r\n  >\r\n    Emojis\r\n  </button>\r\n  \r\n  <div style={{ display: 'flex', gap: '5px', overflowX: 'auto', flex: 1 }}>\r\n    {recentEmojis.map((emoji, index) => (\r\n      <button\r\n        key={index}\r\n        className=\"emoji-btn\"\r\n        onClick={() => handleEmojiSelect(emoji)}\r\n        aria-label={`Add ${emoji} emoji`}\r\n      >\r\n        {emoji}\r\n      </button>\r\n    ))}\r\n  </div>\r\n</div>\r\n\r\n{/* Emoji Picker */}\r\n{showEmojiPicker && (\r\n  <>\r\n    <div className=\"emoji-overlay\" onClick={closeEmojiPicker} />\r\n    <div className=\"emoji-picker\">\r\n      <div className=\"emoji-picker-header\">\r\n        <h3>Select an Emoji</h3>\r\n        <button \r\n          className=\"emoji-picker-close\"\r\n          onClick={closeEmojiPicker}\r\n          aria-label=\"Close emoji picker\"\r\n        >\r\n          ×\r\n        </button>\r\n      </div>\r\n      \r\n      <div className=\"emoji-grid\">\r\n        {Object.entries(emojiCategories).map(([category, emojis]) => (\r\n          <React.Fragment key={category}>\r\n            {emojis.map((emoji, index) => (\r\n              <button\r\n                key={`${category}-${index}`}\r\n                className=\"emoji-option\"\r\n                onClick={() => handleEmojiSelect(emoji)}\r\n                aria-label={`${category} emoji: ${emoji}`}\r\n              >\r\n                {emoji}\r\n              </button>\r\n            ))}\r\n          </React.Fragment>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  </>\r\n)}\r\n\r\n        <form className=\"message-form\" onSubmit={handleSendMessage}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Type your message...\"\r\n            value={message}\r\n            onChange={handleTyping}\r\n            required\r\n          />\r\n          <button type=\"submit\">Send</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}